!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):"function"==typeof define&&define.amd?define("yocto-console-view",["angular-animate","@uirouter/angularjs","guanlecoja-ui","buildbot-data-js"],t):"object"==typeof exports?exports["yocto-console-view"]=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):e["yocto-console-view"]=t(e["angular-animate"],e["@uirouter/angularjs"],e["guanlecoja-ui"],e["buildbot-data-js"])}("undefined"!=typeof self?self:this,(function(e,t,i,n){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,i),l.l=!0,l.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)i.d(n,l,function(t){return e[t]}.bind(null,l));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);i(1),i(2),i(3),i(4);angular.module("yocto_console_view",["ui.router","ui.bootstrap","ngAnimate","guanlecoja.ui","bbData"]).config(["$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider",class ConsoleState{constructor(e,t,n){var l="console";t.addGroup({name:l,caption:"Yocto Console View",icon:"exclamation-circle",order:5});var s={group:l,caption:"Yocto Console View"},r={controller:"".concat(l,"Controller"),controllerAs:"c",template:i(5),name:l,url:"/".concat(l),data:s};e.state(r),n.addSettingsGroup({name:"Console",caption:"Console related settings",items:[{type:"integer",name:"buildLimit",caption:"Number of builds to fetch",default_value:200},{type:"integer",name:"changeLimit",caption:"Number of changes to fetch",default_value:30}]})}}]).controller("consoleController",["$scope","$q","$window","dataService","bbSettingsService","resultsService","$uibModal","$timeout",class Console{constructor(e,t,i,n,l,s,r,a){this.onChange=this.onChange.bind(this),this._onChange=this._onChange.bind(this),this.matchBuildWithChange=this.matchBuildWithChange.bind(this),this.makeFakeChange=this.makeFakeChange.bind(this),this.$scope=e,this.$window=i,this.$uibModal=r,this.$timeout=a,angular.extend(this,s);var o=l.getSettingsGroup("Console");if(this.buildLimit=o.buildLimit.value,this.changeLimit=o.changeLimit.value,this.dataAccessor=n.open().closeOnDestroy(this.$scope),this._infoIsExpanded={},this.$scope.all_builders=this.all_builders=this.dataAccessor.getBuilders(),this.$scope.builders=this.builders=[],"undefined"!=typeof Intl&&null!==Intl){var d=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});this.strcompare=d.compare}else this.strcompare=function(e,t){return e<t?-1:e===t?0:1};this.$scope.revmapping=this.revmapping={},this.$scope.branchmapping=this.branchmapping={},this.$scope.builds=this.builds=this.dataAccessor.getBuilds({property:["yp_build_revision","yp_build_branch","reason"],limit:this.buildLimit,order:"-started_at"}),this.changes=this.dataAccessor.getChanges({limit:this.changeLimit,order:"-changeid"}),this.buildrequests=this.dataAccessor.getBuildrequests({limit:this.buildLimit,order:"-submitted_at"}),this.buildsets=this.dataAccessor.getBuildsets({limit:this.buildLimit,order:"-submitted_at"}),this.builds.onChange=this.onChange,this.changes.onChange=this.onChange,this.buildrequests.onChange=this.onChange,this.buildsets.onChange=this.onChange,this.builds.onNew=e=>{var t=!1,i=e.buildid;null!=(null!=e.properties?e.properties.yp_build_revision:void 0)&&(this.revmapping[e.buildid]=e.properties.yp_build_revision[0],t=!0),null!=(null!=e.properties?e.properties.yp_build_branch:void 0)&&(this.branchmapping[e.buildid]=e.properties.yp_build_branch[0],t=!0),this.revmapping[i]&&this.branchmapping[i]||e.complete_at||(e.getProperties().onChange=e=>{if(t=!1,i=e.endpoint.split("/")[1],!this.revmapping[i]){var n=this.getBuildProperty(e[0],"yp_build_revision");null!=n&&(this.revmapping[i]=n,t=!0)}if(!this.branchmapping[i]){var l=this.getBuildProperty(e[0],"yp_build_branch");null!=l&&(this.branchmapping[i]=l,t=!0)}t&&null==this.onchange_debounce&&(console.log("onNew change props"),this.onchange_debounce=this.$timeout(this._onChange,100))}),t&&null==this.onchange_debounce&&(console.log("onNew change"),this.onchange_debounce=this.$timeout(this._onChange,100))}}getBuildProperty(e,t){return e&&e.hasOwnProperty(t)?e[t][0]:null}onChange(e){0!==this.builds.length&&0!==this.all_builders.length&&this.changes.$resolved&&0!==this.buildsets.length&&0!==this.buildrequests&&null==this.onchange_debounce&&(this.onchange_debounce=this.$timeout(this._onChange,100))}_onChange(){var e,t;console.log("onChange called"),this.onchange_debounce=void 0;for(var i=0,n=Array.from(this.builds);i<n.length;i++)e=n[i],this.all_builders.get(e.builderid).hasBuild=!0;this.sortBuildersByTags(this.all_builders),null==this.changesBySSID&&(this.changesBySSID={}),null==this.changesByRevision&&(this.changesByRevision={});for(var l=0,s=Array.from(this.changes);l<s.length;l++)t=s[l],this.changesBySSID[t.sourcestamp.ssid]=t,this.changesByRevision[t.revision]=t,this.populateChange(t);for(var r=0,a=Array.from(this.builds);r<a.length;r++)e=a[r],this.matchBuildWithChange(e);for(var o in this.filtered_changes=[],this.changesBySSID){(t=this.changesBySSID[o]).comments&&(t.subject=t.comments.split("\n")[0]);for(var d=0,c=Array.from(t.builders);d<c.length;d++){if(c[d].builds.length>0){this.filtered_changes.push(t);break}}}}sortBuildersByTags(e){for(var t=[],i="",n=0,l=Array.from(e);n<l.length;n++){var s=l[n];s.hasBuild&&(t.push(s),i+=".".concat(s.builderid))}if(i!==this.last_builderids_with_builds){for(var r=this._sortBuildersByTags(t),a=[],o=[],d=function(e,t,i){var n=a[e];if(null==n)n=a[e]=[];else{var l=n[n.length-1];if(l.tag===t)return void(l.colspan+=i)}return n.push({tag:t,colspan:i})},c=this,h=function e(t,i){if(d(i,t.tag,t.builders.length),null!=t.tag_line&&0!==t.tag_line.length)return Array.from(t.tag_line).map(t=>e(t,i+1));t.builders.sort((e,t)=>c.strcompare(e.name,t.name)),o=o.concat(t.builders);for(var n=1;n<=100;n++)d(i+n,"",t.builders.length)},u=0,g=Array.from(r);u<g.length;u++)h(g[u],0);this.builders=o,this.tag_lines=[];for(var p=0,b=Array.from(a);p<b.length;p++)1===(r=b[p]).length&&""===r[0].tag||this.tag_lines.push(r);return this.last_builderids_with_builds=i}}_sortBuildersByTags(e){for(var t,i,n,l={},s=0,r=Array.from(e);s<r.length;s++)if(null!=(t=r[s]).tags)for(var a=0,o=Array.from(t.tags);a<o.length;a++)null==l[n=o[a]]&&(l[n]=[]),l[n].push(t);var d=[];for(n in l)(i=l[n]).length<e.length&&d.push({tag:n,builders:i});d.sort((e,t)=>t.builders.length-e.builders.length);for(var c=[],h={},u=0,g=Array.from(d);u<g.length;u++){n=g[u];for(var p=!1,b=0,f=Array.from(n.builders);b<f.length;b++)if(t=f[b],h.hasOwnProperty(t.builderid)){p=!0;break}if(!p){for(var m=0,v=Array.from(n.builders);m<v.length;m++)h[(t=v[m]).builderid]=n.tag;c.push(n)}}for(var y=[],_=0,w=Array.from(e);_<w.length;_++)t=w[_],h.hasOwnProperty(t.builderid)||y.push(t);if(y.length&&c.push({tag:"",builders:y}),c.length>1)for(var B=0,C=Array.from(c);B<C.length;B++)(n=C[B]).tag_line=this._sortBuildersByTags(n.builders);return c}populateChange(e){e.builders=[],e.buildersById={};for(var t=0,i=Array.from(this.builders);t<i.length;t++){var n=i[t];n={builderid:n.builderid,name:n.name,builds:[]},e.builders.push(n),e.buildersById[n.builderid]=n}}matchBuildWithChange(e){var t,i,n,l=this.buildrequests.get(e.buildrequestid);if(null!=l){var s=this.buildsets.get(l.buildsetid);if(null!=s){if(null!=s&&null!=s.sourcestamps)for(var r=0,a=Array.from(s.sourcestamps);r<a.length;r++){var o=a[r];t=this.changesBySSID[o.ssid]}if(null!=(null!=e.properties?e.properties.yp_build_revision:void 0)||this.revmapping[e.buildid]){n=null!=(null!=e.properties?e.properties.yp_build_revision:void 0)?e.properties.yp_build_revision[0]:this.revmapping[e.buildid],null==(t=this.changesByRevision[n])&&(t=this.changesBySSID[n]),null==t&&(t=this.makeFakeChange(n,e.started_at,n)),null!=s&&null!=s.parent_buildid&&(i="Unresolved ".concat(s.parent_buildid),delete this.changesBySSID[i]),i="Unresolved ".concat(e.builderid,"-").concat(e.buildid),delete this.changesBySSID[i],t.caption="Commit",null!=(null!=e.properties?e.properties.yp_build_branch:void 0)&&(t.caption=e.properties.yp_build_branch[0]),this.branchmapping[e.buildid]&&(t.caption=this.branchmapping[e.buildid]),t.revlink="http://git.yoctoproject.org/cgit.cgi/poky/commit/?id="+n,t.errorlink="http://errors.yoctoproject.org/Errors/Latest/?filter="+n+"&type=commit&limit=150";var d=e.buildid;null!=s&&null!=s.parent_buildid&&(d=s.parent_buildid),(null!=t.bid&&d>t.bid||null==t.bid)&&(t.bid=d,t.loglink="https://wiki.yoctoproject.org/wiki/BuildLog#"+d),null!=(null!=e.properties?e.properties.reason:void 0)&&(t.reason=e.properties.reason[0])}else null!=s&&null!=s.parent_buildid&&(n="Unresolved ".concat(s.parent_buildid),null==t&&(t=this.changesBySSID[n]),null==t&&(i="Unresolved ".concat(e.builderid,"-").concat(e.buildid),delete this.changesBySSID[i],t=this.makeFakeChange(n,e.started_at,n))),null==t&&(n="Unresolved ".concat(e.builderid,"-").concat(e.buildid),null==t&&(t=this.changesBySSID[n]),null==t&&(t=this.makeFakeChange(n,e.started_at,n))),t.caption=n;-1==t.buildersById[e.builderid].builds.indexOf(e)&&t.buildersById[e.builderid].builds.push(e)}}}makeFakeChange(e,t,i){var n={revision:e,changeid:e,when_timestamp:t,comments:i};return this.changesBySSID[e]=n,this.populateChange(n),n}openAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!0)}closeAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!1)}getRowHeaderWidth(){return this.hasExpanded()?400:200}getColHeaderHeight(){for(var e=0,t=0,i=Array.from(this.builders);t<i.length;t++){var n=i[t];e=Math.max(n.name.length,e)}return Math.max(100,3*e)}isBigTable(){var e=this.getRowHeaderWidth();return(this.$window.innerWidth-e)/this.builders.length<40}hasExpanded(){for(var e=0,t=Array.from(this.changes);e<t.length;e++){var i=t[e];if(this.infoIsExpanded(i))return!0}return!1}selectBuild(e){return this.$uibModal.open({template:i(6),controller:"consoleModalController as modal",windowClass:"modal-big",resolve:{selectedBuild:()=>e}})}toggleInfo(e){return e.show_details=!e.show_details}infoIsExpanded(e){return e.show_details}}]),i(7),i(8),i(10)},function(t,i){t.exports=e},function(e,i){e.exports=t},function(e,t){e.exports=i},function(e,t){e.exports=n},function(e,t){e.exports=window.T["console_view/views/console.html"]||'<div class="console no-select"><div class="load-indicator" ng-hide="c.builds.$resolved &amp;&amp; c.changes.$resolved &amp;&amp; c.buildrequests.$resolved &amp;&amp; c.buildsets.$resolved"><div class="spinner"><i class="fa fa-circle-o-notch fa-spin fa-2x"></i><p>loading</p></div></div><div ng-show="c.changes.$resolved &amp;&amp; c.filtered_changes.length==0"><p>No changes. Console view needs changesource to be setup, and<a href="#changes">changes</a>to be in the system.</p></div><table class="table table-striped table-bordered" ng-hide="c.filtered_changes.length==0" ng-class="{\'table-fixedwidth\': c.isBigTable()}"><tr class="first-row"><th class="row-header" ng-style="{\'width\': c.getRowHeaderWidth()}"><i class="fa fa-plus-circle pull-left" ng-click="c.openAll()" uib-tooltip="Open information for all changes" uib-tooltip-placement="right"></i><i class="fa fa-minus-circle pull-left" ng-click="c.closeAll()" uib-tooltip="Close information for all changes" uib-tooltip-placement="right"></i></th><th class="column" ng-repeat="builder in c.builders"><span class="builder" ng-style="{\'margin-top\': c.getColHeaderHeight()}"><a ng-href="#/builders/{{ builder.builderid }}" ng-bind="builder.name"></a></span></th></tr><tr class="tag_row" ng-repeat="tag_line in c.tag_lines"><td class="row-header"></td><td ng-repeat="tag in tag_line" colspan="{{tag.colspan}}"><span uib-tooltip="{{ tag.tag }}" ng-style="{width: tag.colspan*50}">{{tag.tag}}</span></td></tr><tr ng-repeat="change in c.filtered_changes | orderBy: [\'-when_timestamp\'] track by change.changeid"><td><yoctochangedetails change="change"></yoctochangedetails></td><td class="column" ng-repeat="builder in change.builders" title="{{builder.name}}"><a ng-repeat="build in builder.builds | orderBy: [\'number\']"><span class="badge-status" ng-if="build.buildid" ng-class="c.results2class(build, \'pulse\')" ng-click="c.selectBuild(build)">{{ build.number }}</span></a></td></tr></table></div>'},function(e,t){e.exports=window.T["console_view/views/modal.html"]||'\x3c!-- Show build summary for the selected build in a modal window--\x3e<div class="modal-header"><i class="fa fa-times pull-right" ng-click="modal.close()"></i><h4 class="modal-title">Build summary</h4></div><div class="modal-body"><buildsummary ng-if="modal.selectedBuild" buildid="modal.selectedBuild.buildid"></buildsummary></div>'},function(e,t){angular.module("yocto_console_view").controller("consoleModalController",["$scope","$uibModalInstance","selectedBuild",class ConsoleModal{constructor(e,t,i){this.$uibModalInstance=t,this.selectedBuild=i,e.$on("$stateChangeStart",()=>this.close())}close(){return this.$uibModalInstance.close()}}])},function(e,t,i){angular.module("yocto_console_view").directive("releaseselectorfield",[class Releaseselectorfield{constructor(){return{replace:!1,restrict:"E",scope:!1,template:i(9),controller:"_ReleaseselectorfieldController"}}}]).controller("_ReleaseselectorfieldController",["$scope","$http",class _releaseselectorfield{constructor(e,t){for(var i=e;null!=i&&null==i.rootfield;)i=i.$parent;if(null!=i){var n={},l=e=>Array.from(e).map(e=>null!=e.fields?l(e.fields):n[e.fullName]=e);l(i.rootfield.fields),console.log(n),e.$watch("field.value",(function(t,i){var l=e.field.selectors[t];if(null!=l)return(()=>{var e=[];for(var t in l){var i=l[t];console.log(t),e.push(n[t].value=i)}return e})()}))}else console.log("rootfield not found!?!?")}}])},function(e,t){e.exports=window.T["console_view/views/releaseselectorfield.html"]||'<basefield><label class="control-label col-sm-2" for="{{field.name}}">{{field.label}}</label><div class="col-sm-10"><select class="form-control" ng-model="field.value" ng-options="v for v in field.choices"></select></div></basefield>'},function(e,t,i){angular.module("yocto_console_view").directive("yoctochangedetails",[class Yoctochangedetails{constructor(){return{replace:!0,restrict:"E",scope:{change:"=",compact:"=?"},template:i(11)}}}])},function(e,t){e.exports=window.T["console_view/views/yoctochangedetails.html"]||'<div class="yoctochangedetails" style="width:100%;"><div style="width:100%;" ng-click="change.show_details = !change.show_details"><a ng-if="change.revlink" ng-href="{{change.revlink}}" uib-tooltip="{{change.comments}}">{{ change.caption }} &nbsp;</a><a ng-if="change.errorlink" ng-href="{{change.errorlink}}">{{ "Errors" }} &nbsp;</a><a ng-if="change.loglink" ng-href="{{change.loglink}}">{{ "WikiLog" }} &nbsp;</a><span ng-if="!change.revlink" uib-tooltip="{{change.comments}}">{{ change.caption }} &nbsp;</span><span ng-if="!compact" uib-tooltip="{{change.when_timestamp | dateformat:\'LLL\'}}">({{ change.when_timestamp | timeago }}) &nbsp;</span><i class="fa fa-chevron-circle-right rotate clickable" ng-class="{\'fa-rotate-90\':change.show_details}"></i></div><div class="anim-changedetails" ng-show="change.show_details"><table class="table table-striped table-condensed" ng-show="change.show_details"><tr ng-show="change.reason"><td>Reason</td><td>{{ change.reason }}</td></tr><tr ng-show="change.author"><td>Author</td><td>{{ change.author }}</td></tr><tr><td>Date</td><td>{{ change.when_timestamp | dateformat:\'LLL\'}} ({{ change.when_timestamp | timeago }})</td></tr><tr ng-show="change.repository"><td>Repository</td><td>{{ change.repository }}</td></tr><tr ng-show="change.branch"><td>Branch</td><td>{{ change.branch }}</td></tr><tr><td>Revision</td><td> <a ng-if="change.revlink" ng-href="{{change.revlink}}"> {{ change.revision }}</a></td></tr></table><h5>Comment</h5><pre>{{ change.comments }}</pre><h5>Changed files</h5><ul><li ng-repeat="file in change.files">{{file}}</li></ul><p ng-hide="change.files.length">No files</p></div></div>'}])}));
//# sourceMappingURL=scripts.js.map